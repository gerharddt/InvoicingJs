// Generated by CoffeeScript 1.6.2
(function() {
  var Client, Company, Item, client, company;

  Item = (function() {
    function Item(qty, description, unit_price, invoice) {
      this.qty = qty;
      this.description = description;
      this.unit_price = unit_price;
      this.amount = parseFloat(this.round(this.qty * this.unit_price));
      this.id;
    }

    Item.prototype.round = function(amount) {
      return amount.toFixed(2);
    };

    Item.prototype.amount = function() {
      return this.amount = parseFloat(this.round(this.qty * this.unit_price));
    };

    return Item;

  })();

  Client = (function() {
    function Client(name, address, city_state_zip, phone) {
      this.name = name;
      this.address = address;
      this.city_state_zip = city_state_zip;
      this.phone = phone;
    }

    return Client;

  })();

  Company = (function() {
    function Company(name, address, phone) {
      this.name = name;
      this.address = address;
      this.phone = phone;
    }

    return Company;

  })();

  client = new Client("Coyote", "1 Road Runner rd.", "Address Line 2", "416-123-4567");

  company = new Company("Company Name", "Company Address line 1\nCompany Address Line 2\nCity, State, Zip", "416-000-0000");

  window.Invoice = angular.module('Invoice', []);

  window.Invoice.controller('InvoiceCtrl', function($scope) {
    $scope.items = [new Item(1, "Acme Bird Seed", 13.25)];
    $scope.autoincrement = 0;
    $scope.company = company;
    $scope.client = client;
    $scope.date = new Date().toLocaleDateString();
    $scope.number = (Math.random() * 100).toFixed(0);
    $scope.freight = 0;
    $scope.fields = [];
    $scope.addField = function() {
      return $scope.fields.push({
        name: '',
        value: '',
        symbol: ''
      });
    };
    $scope.addItem = function() {
      var item;

      item = new Item('', '', '');
      item.id = $scope.autoincrement;
      $scope.items.push(item);
      return ++$scope.autoincrement;
    };
    $scope.removeItem = function(id) {
      var i, item, _i, _len, _ref;

      i = 0;
      _ref = $scope.items;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if (item.id === id) {
          $scope.items.splice(i, 1);
          return;
        } else {
          ++i;
        }
      }
    };
    $scope.updateSubtotal = function() {
      var item, sum, _i, _len, _ref;

      sum = 0;
      _ref = $scope.items;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        sum += item.qty * item.unit_price;
      }
      return sum;
    };
    $scope.subtotal = $scope.updateSubtotal();
    $scope.$watch('items', function() {
      $scope.subtotal = $scope.updateSubtotal();
      return $scope.total = $scope.updateTotal();
    }, true);
    $scope.$watch('fields', function() {
      return $scope.total = $scope.updateTotal();
    }, true);
    $scope.parseFields = function() {
      var field, v, _i, _len, _ref, _results;

      _ref = $scope.fields;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        field = _ref[_i];
        v = field.value;
        if (v[0] === "$" || v[0] === '€' || v[0] === '£') {
          _results.push(field.symbol = 'currency');
        } else if (v[v.length - 1] === "%") {
          _results.push(field.symbol = '%');
        } else {
          _results.push(field.symbol = '');
        }
      }
      return _results;
    };
    $scope.updateTotal = function() {
      var field, t, _i, _len, _ref;

      t = $scope.subtotal;
      $scope.parseFields();
      _ref = $scope.fields;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        field = _ref[_i];
        if (field.symbol === '%') {
          t += t * parseFloat(field.value) / 100;
        } else if (field.symbol === 'currency') {
          t += parseFloat(field.value.substring(1));
        } else {
          t += parseFloat(field.value);
        }
      }
      return t;
    };
    $scope.total = $scope.updateTotal();
  });

}).call(this);
